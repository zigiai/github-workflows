name: Build and Push
on:
  workflow_call:
    inputs:
      username:
        description: Docker registry username
        required: false
        type: string
      repository:
        description: Docker repository name (ex. organization)
        required: false
        type: string
      image:
        description: Docker image name (used as the part of full image, ex. repository/image)
        required: false
        type: string
      gcloud-auth:
        description: Use gcloud CLI authentication helper (gcloud auth configure-docker)
        required: false
        type: boolean
      auto-latest:
        description: Automatically add latest tag (for the latest semver, ex. v1.2.3)
        default: true
        required: false
        type: boolean
      push-on-tags:
        description: Push the image on a tag push
        required: false
        default: true
        type: boolean
      push:
        description: Specifies whether to push the image (not viable with push-on-tags==true)
        required: false
        type: boolean
      build-args:
        description: "List of build-time variables"
        required: false
        type: string
      context:
        description: "Build's context is the set of files located in the specified PATH or URL"
        required: false
        type: string
      file:
        description: "Path to the Dockerfile"
        required: false
        type: string
      labels:
        description: "List of metadata for an image"
        required: false
        type: string
      tags:
        description: "List of tags"
        required: false
        type: string
      secret-files:
        description: "List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)"
        required: false
        type: string
      runs-on:
        description: Specifies runs-on for the workflow jobs
        default: ubuntu-latest
        required: false
        type: string
    secrets:
      password:
        description: Docker registry password
        required: false
      secrets:
        description: "List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)"
        required: false
    outputs:
      version:
        description: Docker image version (a tag)
        value: ${{ jobs.build.outputs.version }}

jobs:
  pre:
    name: Prepare
    runs-on: ["stage", "deployer"]
    outputs:
      image: ${{ steps.set.outputs.image }}
      registry: ${{ steps.set.outputs.registry }}
      username: ${{ steps.set.outputs.username }}
      push: ${{ steps.set.outputs.push }}
    steps:
      -
        uses: actions/github-script@v5
        id: set
        with:
          script: |
            //js
            const imageRepo = '${{ github.event.repository.owner.login }}'.toLowerCase().replace(/\/docker-/, '/')
            const imageName = '${{ github.event.repository.name }}'.toLowerCase().replace(/\/docker-/, '/')
            const repoPaths = '${{ inputs.repository }}'.split('/')
            const push = '${{ inputs.push-on-tags && startsWith(github.ref, 'refs/tags/') || inputs.push }}'
            let imageRegistry = ''

            // input repository first path part looks like an URL (ex. gcr.io which contains .)
            if ((repoPaths[0] || '').split('.').length > 1) {
              imageRegistry = repoPaths[0]
            }

            let imagePaths = [
              '${{ inputs.repository }}' == '' ? imageRepo : '${{ inputs.repository }}',
              '${{ inputs.image }}' == '' ? imageName : '${{ inputs.image }}',
            ]

            // combine full image path
            core.setOutput('image', imagePaths.join('/'))
            core.setOutput('registry', imageRegistry)
            core.setOutput('push', push)

            // autoset username for GCR
            if (imageRegistry.endsWith('gcr.io')) {
              core.setOutput('username', '_json_key')
            } else {
              core.setOutput('username', '${{ inputs.username }}')
            }
            //!js

  build:
    name: Build and Push
    runs-on: ["stage", "deployer"]
    needs: [pre]

    outputs:
      version: ${{ steps.meta.outputs.version }}

    steps:
      - uses: actions/checkout@v2
      -
        if: inputs.auto-latest == 'true'
        id: latest
        uses: dysnix/find-latest-tag@v1
        with:
          regex: '^v\d'
          compared-to-tag: ${{ github.ref }}
          repository: ${{ github.repository }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ needs.pre.outputs.image }}
          flavor: |
            latest=${{ steps.latest.outputs.newer == 'true' || steps.latest.outputs.equal == 'true' }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |-
            ${{ runner.os }}-buildx-${{ github.event.before }}
      -
        if: needs.pre.outputs.push == 'true' && inputs.gcloud-auth != 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ needs.pre.outputs.registry }}
          username: ${{ needs.pre.outputs.username }}
          password: ${{ secrets.password }}
      -
        if: needs.pre.outputs.push == 'true' && inputs.gcloud-auth == 'true'
        run: gcloud auth configure-docker --quiet
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.context }}
          push: ${{ needs.pre.outputs.push }}
          file: ${{ inputs.file }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ inputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            ${{ inputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
